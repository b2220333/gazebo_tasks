// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: measure_cut.proto

#ifndef PROTOBUF_measure_5fcut_2eproto__INCLUDED
#define PROTOBUF_measure_5fcut_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace measure_cut_msgs {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_measure_5fcut_2eproto();
void protobuf_AssignDesc_measure_5fcut_2eproto();
void protobuf_ShutdownFile_measure_5fcut_2eproto();

class MeasureCut;

// ===================================================================

class MeasureCut : public ::google::protobuf::Message {
 public:
  MeasureCut();
  virtual ~MeasureCut();

  MeasureCut(const MeasureCut& from);

  inline MeasureCut& operator=(const MeasureCut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureCut& default_instance();

  void Swap(MeasureCut* other);

  // implements Message ----------------------------------------------

  MeasureCut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MeasureCut& from);
  void MergeFrom(const MeasureCut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool initial_measure = 1;
  inline bool has_initial_measure() const;
  inline void clear_initial_measure();
  static const int kInitialMeasureFieldNumber = 1;
  inline bool initial_measure() const;
  inline void set_initial_measure(bool value);

  // required bool cut = 2;
  inline bool has_cut() const;
  inline void clear_cut();
  static const int kCutFieldNumber = 2;
  inline bool cut() const;
  inline void set_cut(bool value);

  // required double action_bottom_x = 3;
  inline bool has_action_bottom_x() const;
  inline void clear_action_bottom_x();
  static const int kActionBottomXFieldNumber = 3;
  inline double action_bottom_x() const;
  inline void set_action_bottom_x(double value);

  // required bool lasagna_collision = 4;
  inline bool has_lasagna_collision() const;
  inline void clear_lasagna_collision();
  static const int kLasagnaCollisionFieldNumber = 4;
  inline bool lasagna_collision() const;
  inline void set_lasagna_collision(bool value);

  // @@protoc_insertion_point(class_scope:measure_cut_msgs.msgs.MeasureCut)
 private:
  inline void set_has_initial_measure();
  inline void clear_has_initial_measure();
  inline void set_has_cut();
  inline void clear_has_cut();
  inline void set_has_action_bottom_x();
  inline void clear_has_action_bottom_x();
  inline void set_has_lasagna_collision();
  inline void clear_has_lasagna_collision();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double action_bottom_x_;
  bool initial_measure_;
  bool cut_;
  bool lasagna_collision_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_measure_5fcut_2eproto();
  friend void protobuf_AssignDesc_measure_5fcut_2eproto();
  friend void protobuf_ShutdownFile_measure_5fcut_2eproto();

  void InitAsDefaultInstance();
  static MeasureCut* default_instance_;
};
// ===================================================================


// ===================================================================

// MeasureCut

// required bool initial_measure = 1;
inline bool MeasureCut::has_initial_measure() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MeasureCut::set_has_initial_measure() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MeasureCut::clear_has_initial_measure() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MeasureCut::clear_initial_measure() {
  initial_measure_ = false;
  clear_has_initial_measure();
}
inline bool MeasureCut::initial_measure() const {
  return initial_measure_;
}
inline void MeasureCut::set_initial_measure(bool value) {
  set_has_initial_measure();
  initial_measure_ = value;
}

// required bool cut = 2;
inline bool MeasureCut::has_cut() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MeasureCut::set_has_cut() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MeasureCut::clear_has_cut() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MeasureCut::clear_cut() {
  cut_ = false;
  clear_has_cut();
}
inline bool MeasureCut::cut() const {
  return cut_;
}
inline void MeasureCut::set_cut(bool value) {
  set_has_cut();
  cut_ = value;
}

// required double action_bottom_x = 3;
inline bool MeasureCut::has_action_bottom_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MeasureCut::set_has_action_bottom_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MeasureCut::clear_has_action_bottom_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MeasureCut::clear_action_bottom_x() {
  action_bottom_x_ = 0;
  clear_has_action_bottom_x();
}
inline double MeasureCut::action_bottom_x() const {
  return action_bottom_x_;
}
inline void MeasureCut::set_action_bottom_x(double value) {
  set_has_action_bottom_x();
  action_bottom_x_ = value;
}

// required bool lasagna_collision = 4;
inline bool MeasureCut::has_lasagna_collision() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MeasureCut::set_has_lasagna_collision() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MeasureCut::clear_has_lasagna_collision() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MeasureCut::clear_lasagna_collision() {
  lasagna_collision_ = false;
  clear_has_lasagna_collision();
}
inline bool MeasureCut::lasagna_collision() const {
  return lasagna_collision_;
}
inline void MeasureCut::set_lasagna_collision(bool value) {
  set_has_lasagna_collision();
  lasagna_collision_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace measure_cut_msgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_measure_5fcut_2eproto__INCLUDED
